plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.26.0'
    id "java"
    id "idea"
    id "eclipse"
}
applicationDefaultJvmArgs = ['--add-exports=java.base/sun.nio.ch=ALL-UNNAMED',
                             '--add-opens=java.base/java.lang=ALL-UNNAMED',
                             '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
                             '--add-opens=java.base/java.io=ALL-UNNAMED',
                             '--add-opens=java.base/java.logging=ALL-UNNAMED',
                             '--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED',
                             '--add-reads=org.jboss.logging=java.logging',
                             '-Djava.util.logging.config.file="logging.properties"',
]

repositories {
    mavenCentral()
}
//
//sourceCompatibility = "19"
//targetCompatibility = "19"

javafx {
    version = "20"
    modules = ['javafx.controls']
}


dependencies {
// https://mvnrepository.com/artifact/org.hsqldb/hsqldb
//implementation group: 'org.hsqldb', name: 'hsqldb', version: '2.5.1'

// https://mvnrepository.com/artifact/org.apache.derby/derby
//    implementation group: 'org.apache.derby', name: 'derby', version: '10.14.2.0'
// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
//    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.20.0'
// https://mvnrepository.com/artifact/ch.qos.logback/logback-core
//    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.4.7'
// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7'

    implementation "fr.brouillard.oss:cssfx:11.4.0"
    /*
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: mod
    implementation group: 'org.openjfx', name: 'javafx-swing', version: javaFxVersion, classifier: mod
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: mod
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: mod
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: mod
    implementation group: 'org.openjfx', name: 'javafx-media', version: javaFxVersion, classifier: mod
    implementation group: 'org.openjfx', name: 'javafx-web', version: javaFxVersion, classifier: mod
*/
// https://mvnrepository.com/artifact/org.eclipse.persistence/org.eclipse.persistence.jpa
    implementation group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa', version: '4.0.1'

    // https://mvnrepository.com/artifact/jakarta.activation/jakarta.activation-api
    implementation group: 'jakarta.activation', name: 'jakarta.activation-api', version: '2.1.1'


// https://mvnrepository.com/artifact/org.eclipse.persistence/org.eclipse.persistence.jpa.modelgen.processor
    annotationProcessor group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa.modelgen.processor', version: '3.0.0-M1'

// https://mvnrepository.com/artifact/jakarta.transaction/jakarta.transaction-api
    implementation group: 'jakarta.transaction', name: 'jakarta.transaction-api', version: '2.0.0-RC2'


// https://mvnrepository.com/artifact/org.apache.commons/commons-csv
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.8'

    // https://mvnrepository.com/artifact/org.jboss.weld.se/weld-se-core
    implementation group: 'org.jboss.weld.se', name: 'weld-se-core', version: '5.1.0.Final'
// https://mvnrepository.com/artifact/org.jboss.weld/weld-core-impl
    implementation group: 'org.jboss.weld', name: 'weld-core-impl', version: '5.1.0.Final'

    // https://mvnrepository.com/artifact/org.jboss.logging/jboss-logging
    implementation group: 'org.jboss.logging', name: 'jboss-logging', version: '3.5.0.Final'


    // Use JUnit test framework
    implementation('org.junit.jupiter:junit-jupiter:5.6.0')


    // https://mvnrepository.com/artifact/org.kordamp.ikonli/ikonli-javafx
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-javafx', version: '11.3.5'
    // https://mvnrepository.com/artifact/org.kordamp.ikonli/ikonli-fontawesome5-pack
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-fontawesome5-pack', version: '11.3.5'

}

group = "ir.sharif.math.supermario"
version = "1.0-SNAPSHOT"

application {
    mainClass = "ir.sharif.math.supermario.ContainerInitilizer"
    mainModule = "supermario"
}
mainClassName = "supermario/ir.sharif.math.supermario.ContainerInitilizer"

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'shit'
    }
//    forceMerge('log4j-api')
//    mergedModule {
//        additive = true
//        uses 'org.apache.logging.log4j.util.PropertySource';
//        uses 'org.apache.logging.log4j.core.util.ContextDataProvider';
//        uses 'org.apache.logging.log4j.core.util.WatchEventService';
//        uses 'org.apache.logging.log4j.spi.Provider';
//        uses 'org.apache.logging.log4j.message.ThreadDumpMessage.ThreadInfoFactory';
//    }
//    mergedModule {
//        additive = true
//        requires("org.slf4j")
//    }

    addExtraDependencies("javafx")
    launcher {
//        name = project.launcherName
        jvmArgs = ['--add-exports=java.base/sun.nio.ch=ALL-UNNAMED',
                   '--add-opens=java.base/java.lang=ALL-UNNAMED',
                   '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
                   '--add-opens=java.base/java.io=ALL-UNNAMED',
                   '--add-opens=java.base/java.logging=ALL-UNNAMED',
                   '--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED',
                   '--add-reads=org.jboss.logging=java.logging',
                   '--add-reads=java.logging=org.jboss.logging',
                   '-Djava.util.logging.config.file="logging.properties"',]
//        windowsScriptTemplate = file('windowsScriptTemplate.txt')
    }

    jpackage {
//        jvmArgs = ['-splash:$APPDIR/splash.png']
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
//        icon = "src/main/resources/java.$imgType"
        // imageOptions += ['--win-console']
        installerOptions += ['--vendor', 'Acme Corporation',
                             '--file-associations', 'src/main/resources/associations.properties',
                             '--app-version', version]
        if (currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu']
        }
        if (currentOs.macOsX) {
            jvmArgs = ["-Duser.dir=/tmp"]
            installerOptions = [
//                '--mac-sign',
//                '--mac-signing-key-user-name', System.getenv('SIGNING_KEY_USER_NAME'),
//                '--mac-signing-keychain', System.getenv('SIGNING_KEYCHAIN_PATH')
            ]
        } else if (currentOs.windows) {
            installerOptions = ['--win-per-user-install', '--win-dir-chooser', '--win-menu']
        } else {
            installerType = 'deb' // 'rpm'
        }
    }
}